# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage
import cv2
from PyQt5.QtGui import QPixmap


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Create vertical layout for the central widget
        self.central_layout = QtWidgets.QVBoxLayout(self.centralwidget)

        # Create horizontal layout for image views
        self.image_layout = QtWidgets.QHBoxLayout()

        # Add QGraphicsViews to the image layout
        self.Before = QtWidgets.QGraphicsView()
        self.after = QtWidgets.QGraphicsView()
        self.image_layout.addWidget(self.Before)
        self.image_layout.addWidget(self.after)

        # Add the image layout to the central layout
        self.central_layout.addLayout(self.image_layout)

        # Create a grid layout for input fields and buttons
        self.grid_layout = QtWidgets.QGridLayout()
        
        # Add labels and line edits to the grid layout
        self.kernelLabel = QtWidgets.QLabel("Kernel:")
        self.kernelLineEdit = QtWidgets.QLineEdit()
        self.lowThresholdLabel = QtWidgets.QLabel("Low Threshold:")
        self.lowThresholdLineEdit = QtWidgets.QLineEdit()
        self.highThresholdLabel = QtWidgets.QLabel("High Threshold:")
        self.highThresholdLineEdit = QtWidgets.QLineEdit()
        self.sigmaLabel = QtWidgets.QLabel("Sigma:")
        self.sigmaLineEdit = QtWidgets.QLineEdit()
        
        # Add widgets to grid layout
        self.grid_layout.addWidget(self.kernelLabel, 0, 0)
        self.grid_layout.addWidget(self.kernelLineEdit, 0, 1)
        self.grid_layout.addWidget(self.lowThresholdLabel, 1, 0)
        self.grid_layout.addWidget(self.lowThresholdLineEdit, 1, 1)
        self.grid_layout.addWidget(self.highThresholdLabel, 2, 0)
        self.grid_layout.addWidget(self.highThresholdLineEdit, 2, 1)
        self.grid_layout.addWidget(self.sigmaLabel, 3, 0)
        self.grid_layout.addWidget(self.sigmaLineEdit, 3, 1)

        # Add buttons to the grid layout
        self.pushButton = QtWidgets.QPushButton("Apply")
        self.pushButton_2 = QtWidgets.QPushButton("Browse Image")
        self.grid_layout.addWidget(self.pushButton, 4, 0)
        self.grid_layout.addWidget(self.pushButton_2, 4, 1)

        # Add grid layout to central layout
        self.central_layout.addLayout(self.grid_layout)

        # Set the central widget and the main window
        MainWindow.setCentralWidget(self.centralwidget)

        # Menu and status bar code remain unchanged
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusbar)
        self.menuCanny_edge_detector = QtWidgets.QMenu(self.menubar)
        self.menubar.addAction(self.menuCanny_edge_detector.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Main Window"))
        self.pushButton.setText(_translate("MainWindow", "Apply"))
        self.pushButton_2.setText(_translate("MainWindow", "Browse Image"))
        self.menuCanny_edge_detector.setTitle(_translate("MainWindow", "Canny Edge Detector"))
        self.kernelLabel.setText(_translate("MainWindow", "Kernel:"))
        self.lowThresholdLabel.setText(_translate("MainWindow", "Low Threshold:"))
        self.highThresholdLabel.setText(_translate("MainWindow", "High Threshold:"))
        self.sigmaLabel.setText(_translate("MainWindow", "Sigma:"))

    def display_initial_image(self, image_data):
        qimage = QImage(image_data.data, image_data.shape[1], image_data.shape[0],
                        QImage.Format_RGB888).rgbSwapped()

        # Convert QImage to QPixmap
        pixmap = QPixmap.fromImage(qimage)

        # Create a QGraphicsScene
        scene = QtWidgets.QGraphicsScene()

        # Add the QPixmap to QGraphicsScene as QGraphicsPixmapItem
        pixmap_item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(pixmap_item)

        # Set QGraphicsScene to QGraphicsView
        self.Before.setScene(scene)
        self.Before.fitInView(pixmap_item)

    def display_result_image(self, image_data):
        qimage = QImage(image_data.data, image_data.shape[1], image_data.shape[0], 
                        QImage.Format_Grayscale8)

        # Display in the after QGraphicsView
        pixmap = QPixmap.fromImage(qimage)
        scene = QtWidgets.QGraphicsScene()
        pixmap_item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(pixmap_item)
        self.after.setScene(scene)
        self.after.show()
        self.after.fitInView(pixmap_item)

    def clear_result_image(self):
        self.after.setScene(None)
        self.after.show()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
