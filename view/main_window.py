# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage
import cv2
from PyQt5.QtGui import QPixmap



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        
        # Central widget and layout
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.central_layout = QtWidgets.QVBoxLayout(self.centralwidget)

        # Image display layout
        self.image_layout = QtWidgets.QHBoxLayout()
        self.Before = QtWidgets.QGraphicsView()
        self.after = QtWidgets.QGraphicsView()
        self.image_layout.addWidget(self.Before)
        self.image_layout.addWidget(self.after)
        self.central_layout.addLayout(self.image_layout)

        # Grid layouts for parameters
        self.grid_layout = QtWidgets.QGridLayout()  # Canny parameters
        self.grid_layout_hough = QtWidgets.QGridLayout()  # Hough parameters
        self.grid_layout_harris = QtWidgets.QGridLayout()  # Harris parameters
        
        # Define widgets for Canny, Hough, and Harris parameters
        # Canny parameters
        self.kernelLabel = QtWidgets.QLabel("Kernel:")
        self.kernelLineEdit = QtWidgets.QLineEdit()
        self.lowThresholdLabel = QtWidgets.QLabel("Low Threshold:")
        self.lowThresholdLineEdit = QtWidgets.QLineEdit()
        self.highThresholdLabel = QtWidgets.QLabel("High Threshold:")
        self.highThresholdLineEdit = QtWidgets.QLineEdit()
        self.sigmaLabel = QtWidgets.QLabel("Sigma:")
        self.sigmaLineEdit = QtWidgets.QLineEdit()
        
        self.grid_layout.addWidget(self.kernelLabel, 0, 0)
        self.grid_layout.addWidget(self.kernelLineEdit, 0, 1)
        self.grid_layout.addWidget(self.lowThresholdLabel, 1, 0)
        self.grid_layout.addWidget(self.lowThresholdLineEdit, 1, 1)
        self.grid_layout.addWidget(self.highThresholdLabel, 2, 0)
        self.grid_layout.addWidget(self.highThresholdLineEdit, 2, 1)
        self.grid_layout.addWidget(self.sigmaLabel, 3, 0)
        self.grid_layout.addWidget(self.sigmaLineEdit, 3, 1)
        
        # Hough parameters
        self.rhosLabel = QtWidgets.QLabel("Rhos:")
        self.rhosLineEdit = QtWidgets.QLineEdit()
        self.thetasLabel = QtWidgets.QLabel("Thetas:")
        self.thetasLineEdit = QtWidgets.QLineEdit()
        self.thresholdRatioLabel = QtWidgets.QLabel("Threshold Ratio:")
        self.thresholdRatioLineEdit = QtWidgets.QLineEdit()
        
        self.grid_layout_hough.addWidget(self.rhosLabel, 0, 0)
        self.grid_layout_hough.addWidget(self.rhosLineEdit, 0, 1)
        self.grid_layout_hough.addWidget(self.thetasLabel, 1, 0)
        self.grid_layout_hough.addWidget(self.thetasLineEdit, 1, 1)
        self.grid_layout_hough.addWidget(self.thresholdRatioLabel, 2, 0)
        self.grid_layout_hough.addWidget(self.thresholdRatioLineEdit, 2, 1)
        
        # Harris parameters
        self.windowSizeLabel = QtWidgets.QLabel("Window Size:")
        self.windowSizeLineEdit = QtWidgets.QLineEdit()
        self.kLabel = QtWidgets.QLabel("k (sensitivity factor):")
        self.kLineEdit = QtWidgets.QLineEdit()
        self.alphaLabel = QtWidgets.QLabel("Alpha (threshold):")
        self.alphaLineEdit = QtWidgets.QLineEdit()
        
        self.grid_layout_harris.addWidget(self.windowSizeLabel, 0, 0)
        self.grid_layout_harris.addWidget(self.windowSizeLineEdit, 0, 1)
        self.grid_layout_harris.addWidget(self.kLabel, 1, 0)
        self.grid_layout_harris.addWidget(self.kLineEdit, 1, 1)
        self.grid_layout_harris.addWidget(self.alphaLabel, 2, 0)
        self.grid_layout_harris.addWidget(self.alphaLineEdit, 2, 1)
        
        # Buttons
        self.pushButton = QtWidgets.QPushButton("Apply")
        self.pushButton_2 = QtWidgets.QPushButton("Browse Image")
        self.pushButton_3 = QtWidgets.QPushButton("Apply")
        
        # Add buttons to layouts
        self.grid_layout.addWidget(self.pushButton, 4, 0, 1, 2)
        self.grid_layout.addWidget(self.pushButton_2, 5, 0, 1, 2)
        self.grid_layout_hough.addWidget(self.pushButton, 3, 0, 1, 2)
        self.grid_layout_hough.addWidget(self.pushButton_2, 4, 0, 1, 2)
        self.grid_layout_harris.addWidget(self.pushButton, 3, 0, 1, 2)
        self.grid_layout_harris.addWidget(self.pushButton_2, 4, 0, 1, 2)
        
        # Add initial layout (Canny)
        self.central_layout.addLayout(self.grid_layout)
        
        # Add menus
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        MainWindow.setMenuBar(self.menubar)
        self.programs_menu = self.menubar.addMenu("Programs")
        
        # Create actions for menu items
        self.action_canny = QtWidgets.QAction("Canny Edge Detection", MainWindow)
        self.action_hough = QtWidgets.QAction("Hough Line Detection", MainWindow)
        self.action_harris = QtWidgets.QAction("Harris Corner Detection", MainWindow)
        
        # Add actions to the programs menu
        self.programs_menu.addAction(self.action_canny)
        self.programs_menu.addAction(self.action_hough)
        self.programs_menu.addAction(self.action_harris)
        
        # Connect actions to functions
        self.action_canny.triggered.connect(self.show_canny_parameters)
        self.action_hough.triggered.connect(self.show_hough_parameters)
        self.action_harris.triggered.connect(self.show_harris_parameters)
        
        # Status bar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusbar)
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Main Window"))
        self.pushButton.setText(_translate("MainWindow", "Apply"))
        self.pushButton_2.setText(_translate("MainWindow", "Browse Image"))
        self.programs_menu.setTitle(_translate("MainWindow", "Programs"))
        self.action_canny.setText(_translate("MainWindow", "Canny Edge Detection"))
        self.action_hough.setText(_translate("MainWindow", "Hough Line Detection"))
        self.action_harris.setText(_translate("MainWindow", "Harris Corner Detection"))
        self.kernelLabel.setText(_translate("MainWindow", "Kernel:"))
        self.lowThresholdLabel.setText(_translate("MainWindow", "Low Threshold:"))
        self.highThresholdLabel.setText(_translate("MainWindow", "High Threshold:"))
        self.sigmaLabel.setText(_translate("MainWindow", "Sigma:"))
        self.rhosLabel.setText(_translate("MainWindow", "Rhos:"))
        self.thetasLabel.setText(_translate("MainWindow", "Thetas:"))
        self.thresholdRatioLabel.setText(_translate("MainWindow", "Threshold Ratio:"))
        self.alphaLabel.setText(_translate("MainWindow", "Alpha:"))
        self.kLabel.setText(_translate("MainWindow", "k:"))
        self.windowSizeLabel.setText(_translate("MainWindow", "Window Size:"))


    def display_initial_image(self, image_data):
        qimage = QImage(image_data.data, image_data.shape[1], image_data.shape[0],
                        QImage.Format_RGB888).rgbSwapped()

        # Convert QImage to QPixmap
        pixmap = QPixmap.fromImage(qimage)

        # Create a QGraphicsScene
        scene = QtWidgets.QGraphicsScene()

        # Add the QPixmap to QGraphicsScene as QGraphicsPixmapItem
        pixmap_item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(pixmap_item)

        # Set QGraphicsScene to QGraphicsView
        self.Before.setScene(scene)
        self.Before.fitInView(pixmap_item, QtCore.Qt.KeepAspectRatio)

    def display_result_image(self, image_data):
        qimage = QImage(image_data.data, image_data.shape[1], image_data.shape[0], 
                        QImage.Format_Grayscale8)

        # Display in the after QGraphicsView
        pixmap = QPixmap.fromImage(qimage)
        scene = QtWidgets.QGraphicsScene()
        pixmap_item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(pixmap_item)
        self.after.setScene(scene)
        self.after.show()
        self.after.fitInView(pixmap_item)

    def clear_result_image(self):
        self.after.setScene(None)
        self.after.show()


    def show_canny_parameters(self):
        # Remove Hough line detection parameters and add Canny edge detection parameters 
        self.central_layout.removeItem(self.grid_layout_hough)
        self.central_layout.addLayout(self.grid_layout)
        self.kernelLabel.setVisible(True)
        self.kernelLineEdit.setVisible(True)
        self.lowThresholdLabel.setVisible(True)
        self.lowThresholdLineEdit.setVisible(True)
        self.highThresholdLabel.setVisible(True)
        self.highThresholdLineEdit.setVisible(True)
        self.sigmaLabel.setVisible(True)
        self.sigmaLineEdit.setVisible(True)

    # Hide widgets for Hough line detection parameters
        self.rhosLabel.setVisible(False)
        self.rhosLineEdit.setVisible(False)
        self.thetasLabel.setVisible(False)
        self.thetasLineEdit.setVisible(False)
        self.thresholdRatioLabel.setVisible(False)
        self.thresholdRatioLineEdit.setVisible(False)
        self.alphaLabel.setVisible(False)
        self.alphaLineEdit.setVisible(False)
        self.kLabel.setVisible(False)
        self.kLineEdit.setVisible(False)
        self.windowSizeLabel.setVisible(False)
        self.windowSizeLineEdit.setVisible(False)
            

    def show_hough_parameters(self):
        # Remove Apply and Browse Image buttons from the grid layout
        self.grid_layout.removeWidget(self.pushButton)
        self.grid_layout.removeWidget(self.pushButton_2)

        # Add Hough line detection parameters layout
        self.central_layout.addLayout(self.grid_layout_hough)

        # Add Apply and Browse Image buttons below the input fields
        self.central_layout.addWidget(self.pushButton)
        self.central_layout.addWidget(self.pushButton_2)

        # Hide widgets for Canny edge detection parameters & Harris corner detection parameters
        self.kernelLabel.setVisible(False)
        self.kernelLineEdit.setVisible(False)
        self.lowThresholdLabel.setVisible(False)
        self.lowThresholdLineEdit.setVisible(False)
        self.highThresholdLabel.setVisible(False)
        self.highThresholdLineEdit.setVisible(False)
        self.sigmaLabel.setVisible(False)
        self.sigmaLineEdit.setVisible(False)
        self.pushButton.setVisible(False)
        self.alphaLabel.setVisible(False)
        self.alphaLineEdit.setVisible(False)
        self.kLabel.setVisible(False)
        self.kLineEdit.setVisible(False)
        self.windowSizeLabel.setVisible(False)
        self.windowSizeLineEdit.setVisible(False)

        # Show widgets for Hough line detection parameters
        self.rhosLabel.setVisible(True)
        self.rhosLineEdit.setVisible(True)
        self.thetasLabel.setVisible(True)
        self.thetasLineEdit.setVisible(True)
        self.thresholdRatioLabel.setVisible(True)
        self.thresholdRatioLineEdit.setVisible(True)
        self.pushButton_3.setVisible(True)
        
    def show_harris_parameters(self):
        # Remove Apply and Browse Image buttons from the grid layout
        self.grid_layout.removeWidget(self.pushButton)
        self.grid_layout.removeWidget(self.pushButton_2)

        # Add Harris corner detection parameters layout
        self.central_layout.addLayout(self.grid_layout_harris)

        # Add Apply and Browse Image buttons below the input fields
        self.central_layout.addWidget(self.pushButton)
        self.central_layout.addWidget(self.pushButton_2)

        # Hide widgets for Canny edge detection parameters & Hough line detection parameters
        self.kernelLabel.setVisible(False)
        self.kernelLineEdit.setVisible(False)
        self.lowThresholdLabel.setVisible(False)
        self.lowThresholdLineEdit.setVisible(False)
        self.highThresholdLabel.setVisible(False)
        self.highThresholdLineEdit.setVisible(False)
        self.sigmaLabel.setVisible(False)
        self.sigmaLineEdit.setVisible(False)
        self.pushButton.setVisible(False)
        self.rhosLabel.setVisible(False)
        self.rhosLineEdit.setVisible(False)
        self.thetasLabel.setVisible(False)
        self.thetasLineEdit.setVisible(False)
        self.thresholdRatioLabel.setVisible(False)
        self.thresholdRatioLineEdit.setVisible(False)

        # Show widgets for Harris corner detection parameters
        self.alphaLabel.setVisible(True)
        self.alphaLineEdit.setVisible(True)
        self.kLabel.setVisible(True)
        self.kLineEdit.setVisible(True)
        self.windowSizeLabel.setVisible(True)
        self.windowSizeLineEdit.setVisible(True)
        self.pushButton_3.setVisible(True)   
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
